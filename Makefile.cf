ifndef MQO_CFG_LOADED
MQO_CFG_LOADED=1

# This must be first -- in case there's LTC in /usr/local/include.  If there's
# LTC in /usr/include, well, we're fucked.

CFLAGS += -I$(ROOT)/crypt/src/headers 
CFLAGS += -std=gnu99
HAS_DEVRANDOM=yes

BIN=$(ROOT)/bin
STUBS=$(ROOT)/stubs

OS=$(shell uname)

DO_CC=gcc
ifdef USE_MZSCHEME
DO_SCHEME=mzscheme -M errortrace -f $(ROOT)/lib/run-mzscheme.scm -C
endif

ifdef USE_GUILE
DO_SCHEME=guile --debug -l $(ROOT)/lib/run-guile.scm -e guile-main -s 
endif

ifndef DO_SCHEME
DO_SCHEME=@echo You need a scheme interpreter for 
endif

ifeq ($(OS),MINGW32_NT-5.1)
OS=MinGW
endif

ifeq ($(OS),CYGWIN_NT-5.1)
OS=Cygwin
endif

ifeq ($(OS),Linux)
# Tested on Debian.
LIBGC=/usr/lib/libgc.a
CFLAGS += -I/usr/local/include -I/usr/include/gc -D_GNU_SOURCE
CFLAGS += -pthread
PLATFORM = linux
endif

ifeq ($(OS),MinGW)
CFLAGS += -I/mingw/include -DGC_WIN32_THREADS=1
PLATFORM = win32
LIBGC=/mingw/lib/libgc.a 
EXE=.exe
HAS_DEVRANDOM=no
endif

ifeq ($(OS),Cygwin)
CFLAGS += -mno-cygwin
CFLAGS += -I/usr/local/include
LIBGC=/usr/local/lib/libgc.a
LIBS += -lwsock32
PLATFORM = win32
EXE=.exe
HAS_DEVRANDOM=no
endif

ifeq ($(OS),OpenBSD)
CFLAGS += -fno-stack-protector -I/usr/local/include
LIBGC=/usr/local/lib/libgc.a
PLATFORM = openbsd
endif

ifeq ($(OS),Darwin)
CFLAGS += -I/opt/local/include -DNO_PARALLEL_GC
LIBGC=/opt/local/lib/libgc.a
PLATFORM = macosx
endif

ifdef COMPACT
CFLAGS+=-Os -DNDEBUG
else
CFLAGS+=-g 
endif

LIBTC=$(ROOT)/crypt/libtomcrypt.a
MOSVM=$(BIN)/mosvm$(EXE)
MOSVM_STUB=$(STUBS)/mosvm-stub-$(PLATFORM)$(EXE)
GLUE=$(BIN)/glue$(EXE)
MOSC=$(BIN)/mosc$(EXE)

ifeq ($(HAS_DEVRANDOM),yes)
CFLAGS += -DDEVRANDOM
endif

endif
